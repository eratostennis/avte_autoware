version: '2.17'
#TODO: try mounting dev/shm and notice the difference
services:
  main-perception:
    build:
      context: ../../..
      dockerfile: docker/autoware-openadk/services/main-perception/Dockerfile
      args:
        ROS_DISTRO: ${rosdistro}
        PLATFORM: ${platform}
    image: ghcr.io/autowarefoundation/autoware-openadk:runtime-main-perception-${rosdistro}-${platform}
    volumes:
      - /var/tmp/autoware_map:/autoware_map
      - /tmp/.X11-unix:/tmp/.X11-unix
    network_mode: "host"
    environment:
      - ROS_DOMAIN_ID=${services_ros_domain_id}
      - DISPLAY=$DISPLAY
      - services_use_sim_time=${services_use_sim_time}
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    # command: bash -c "sleep 15 && ros2 launch /launch/main-perception.launch.xml map_path:=/autoware_map/sample-map-rosbag vehicle_model:=sample_vehicle sensor_model:=sample_sensor_kit use_sim_time:=${services_use_sim_time}"
    # command: bash -c "sleep 3 && /bin/bash"
    #   test: ["CMD-SHELL", "ros2 node list"]
    #   interval: 10s
    #   timeout: 5s
    #   retries: 3
    command: /bin/bash
    # command: ros2 launch /launch/main-perception.launch.xml map_path:=/autoware_map/sample-map-rosbag vehicle_model:=sample_vehicle sensor_model:=sample_sensor_kit use_sim_time:=${services_use_sim_time}
    tty: true
    stdin_open: true

  planning-control:
    build:
      context: ../../..
      dockerfile: docker/autoware-openadk/services/planning-control/Dockerfile
      args:
        ROS_DISTRO: ${rosdistro}
        PLATFORM: ${platform}
    # image: awf/openadk:runtime-planning-control
    image: ghcr.io/autowarefoundation/autoware-openadk:runtime-planning-control-${rosdistro}-${platform}
    volumes:
      - /var/tmp/autoware_map:/autoware_map
        - /tmp/.X11-unix:/tmp/.X11-unix
    network_mode: "host"
    environment:
      - ROS_DOMAIN_ID=${services_ros_domain_id}
      - DISPLAY=$DISPLAY
      - services_use_sim_time=${services_use_sim_time}
    # command: ros2 launch /launch/planning-control.launch.xml map_path:=/autoware_map/sample-map-rosbag vehicle_model:=sample_vehicle sensor_model:=sample_sensor_kit use_sim_time:=${services_use_sim_time}
    command: /bin/bash
    tty: true
    stdin_open: true
        # condition: service_healthy
        # timeout: 60s